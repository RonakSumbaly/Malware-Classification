import os
from config import conf
import csv

globalSectionDict = {}



# Calls the function countLines on all files of the directory
def getFile(dirName):
    for _, _, files in os.walk(dirName):
        for f in files:
            print f
            print countLines(os.path.join(dirName, f))


# Counts the number of lines in a file
def countLines(fileName):
    fileOpen = open(fileName, "r")
    fileLines = fileOpen.readlines()
    return sum(1 for line in fileLines)


# Adds unique words with their counts to dictionary
def addToDictionary(dictionary, key):
    if dictionary.has_key(key):
        dictionary[key] += 1
    else:
        dictionary[key] = 1



# Counts unique sections
def countSections(fileName):
    sectionCountDict = {}
    fileOpen = open(os.path.join(conf['train']['file_loc'],fileName)+ ".asm", "r")
    fileLines = fileOpen.readlines()
    for eachLine in fileLines:
        if ":" in eachLine:
            addToDictionary(sectionCountDict, eachLine.split(":")[0])
    globalSectionDict[fileName] = sectionCountDict


def createCsvFromDict():
    countFeatureLoc = conf['sample']['file_loc'] + "/CSV Files/" + "train" + "countFeature.csv"
    fieldNames = set()
    for value in globalSectionDict.values():
        fieldNames.update(value.keys())
    fieldNames = ['ID'] +list(fieldNames)
    wr = csv.DictWriter(open(countFeatureLoc, 'w+'), fieldnames=fieldNames)
    wr.writeheader()
    for (key,value) in globalSectionDict.iteritems():
        countFeature = dict(zip(fieldNames, [0] * len(fieldNames)))
        countFeature.update({'ID': key})
        countFeature.update(value)
        wr.writerow(countFeature)


def main():
    csvReader = csv.DictReader(open(conf['train']['labels']), fieldnames=['Id','Class'])
    for eachRow in csvReader:
        if eachRow['Id']=='Id':
            continue
        countSections(eachRow['Id'])
    createCsvFromDict()

if __name__ == "__main__":
    main()
