import os, shutil
import csv
from collections import Counter

dataFolder = os.path.join(os.path.dirname(__file__), "Data Files")
trainFolderLoc = os.path.join(dataFolder, "Training Data")
testFolderLoc = os.path.join(dataFolder, "Testing Data")

# get class labels from csv file
def getClassLabels():
    reader = csv.reader(open("trainLabels.csv"))
    trainLabels = {}

    for row in reader:
        key = row[0]
        if key in trainLabels:
            pass
        trainLabels[key] = row[1]

    return trainLabels

# count occurrence of various classes
def countOfFiles(trainLabels):
    return dict(Counter(trainLabels.values()))

# half file count to separate training and testing evenly
def halfFilesCount(fileCount):
    for keys in fileCount.keys():
        fileCount[keys] /= 2

    return fileCount

# get list of file names for training and testing data
def getTrainingFilesName(labels, fileCount):
    trainLabels = []
    testLabels = []
    for keys in labels.keys():
        fileClass = labels[keys]
        if fileCount[fileClass] > 0:
            trainLabels.append(keys)
            fileCount[fileClass] -= 1
        else:
            testLabels.append(keys)

    return trainLabels,testLabels

# make testing and training data
def makeDataFolders(trainFolder, testFolder):
    if not os.path.exists(trainFolder):
        os.makedirs(trainFolder)

    if not os.path.exists(testFolder):
        os.makedirs(testFolder)

# separate data files
def separateDataFiles(trainLabels, testLabels):
    for i in os.listdir(dataFolder):
        fileName = i.split(".")[0]
        if fileName in trainLabels:
            shutil.move(os.path.join(dataFolder,i),os.path.join(trainFolderLoc, i))
        elif fileName in testLabels:
            shutil.move(os.path.join(dataFolder,i),os.path.join(testFolderLoc, i))

if __name__ == '__main__':
    labels = getClassLabels()
    fileCount = halfFilesCount(countOfFiles(labels))
    trainLabels, testLabels = getTrainingFilesName(labels, fileCount)
    makeDataFolders(trainFolderLoc, testFolderLoc)
    separateDataFiles(trainLabels, testLabels)
