import os,csv
import shutil

from config import conf
from collections import Counter

# get class labels from csv file
def getClassLabels():
    reader = csv.reader(open(conf['sample']['labels'],'rb'))
    trainLabels = {}

    for row in reader:
        key = row[0]
        if key in trainLabels:
            pass
        trainLabels[key] = row[1]

    return trainLabels

# count occurrence of various classes
def countOfFiles(trainLabels):
    return dict(Counter(trainLabels.values()))

# half file count to separate training and testing evenly
def halfFilesCount(fileCount, n):
    for keys in fileCount.keys():
        fileCount[keys] = n * 2

    return fileCount

# get list of file names for training and testing data
def getTrainingFilesName(labels, fileCount,n):
    trainLabels = []
    testLabels = []
    for keys in labels.keys():
        fileClass = labels[keys]
        if fileCount[fileClass] > n:
            trainLabels.append(keys)
            fileCount[fileClass] -= 1
        elif (fileCount[fileClass] > 0) and (fileCount[fileClass] <= n):
            testLabels.append(keys)
            fileCount[fileClass] -= 1
        else:
            pass

    return trainLabels,testLabels

# output train & test file names
def outputCSV(trainLabels, testLabels):
    trainFile = open(conf['train']['file_names'], 'w+')
    testFile = open(conf['test']['file_names'], 'w+')

    tr = csv.writer(trainFile, quoting=csv.QUOTE_ALL)
    te = csv.writer(testFile, quoting=csv.QUOTE_ALL)

    tr.writerow(trainLabels)
    te.writerow(testLabels)

def createLabelsCSV(labels, trainLabels, testLabels):
    trainLabelsLoc = open(conf['test']['labels'], 'w+')
    testLabelsLoc = open(conf['train']['labels'], 'w+')

    tr = csv.DictWriter(trainLabelsLoc, fieldnames=['Id','Class'])
    tr.writeheader()

    te = csv.DictWriter(testLabelsLoc, fieldnames=['Id','Class'])
    te.writeheader()

    for value in trainLabels:
        entry = dict({'Id':value, 'Class':labels[value]})
        tr.writerow(entry)

    for value in testLabels:
        entry = dict({'Id':value, 'Class':labels[value]})
        te.writerow(entry)

def makeDataFolders():
    if not os.path.exists(conf['train']['file_loc']):
        os.makedirs(conf['train']['file_loc'])

    if not os.path.exists(conf['test']['file_loc']):
        os.makedirs(conf['test']['file_loc'])

def copyFilesOver(trainLabels, testLabels , externalVolLoc):
    for i in os.listdir(externalVolLoc):
        fileName = i.split(".")[0]
        if fileName in trainLabels:
            shutil.copy(os.path.join(externalVolLoc,i),os.path.join(conf['train']['file_loc'], i))
        elif fileName in testLabels:
            shutil.copy(os.path.join(externalVolLoc,i),os.path.join(conf['test']['file_loc'], i))

if __name__ == "__main__":
    n = 10
    externalVolLoc = '/Volumes/TOSHIBA EXT/Machine Learning Project/train'
    labels = getClassLabels()
    fileCount = halfFilesCount(countOfFiles(labels), n)
    trainLabels, testLabels = getTrainingFilesName(labels, fileCount,n)
    del trainLabels[-1]  # remove ID
    createLabelsCSV(labels, trainLabels,testLabels)
    makeDataFolders()
    copyFilesOver(trainLabels,testLabels, externalVolLoc)