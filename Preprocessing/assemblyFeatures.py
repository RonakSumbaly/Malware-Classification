import os
import csv
import time
from config import asmInstrSet, conf

# counts the number of occurrences of assembly instructions & {'??','00'} in .bytes
def countInstructions(env):
    timeStart = time.time()
    reader = csv.reader(open(conf[env]['file_names']))
    instrFeatureLoc = conf['sample']['file_loc'] + "/CSV Files/" + env + "InstrFeature.csv"

    fieldNames = ['ID'] + list(asmInstrSet) + ['00', '??']
    wr = csv.DictWriter(open(instrFeatureLoc, 'w+'), fieldnames=fieldNames)
    wr.writeheader()

    for row in reader:
        for value in row:
            pathASM = os.path.join(conf[env]['file_loc'],value + ".asm")
            pathByte = os.path.join(conf[env]['file_loc'],value + ".bytes")
            instrFeature = dict(zip(asmInstrSet, [0] * len(asmInstrSet)))
            instrFeature.update({'ID': value, '00': 0, '??': 0})

            for line in open(pathASM, 'r'):
                if ';' not in line:
                    for key in asmInstrSet:
                        if key in line:
                            instrFeature[key] += 1
            for line in open(pathByte, 'r'):
                instrFeature['00'] += line.count('00')
                instrFeature['??'] += line.count('??')

            wr.writerow(instrFeature)

    timeStop = time.time()
    print timeStop - timeStart

countInstructions('train')